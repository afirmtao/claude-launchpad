---
- name: Verify server configuration
  hosts: all
  gather_facts: true

  pre_tasks:
    - name: Display verification header
      ansible.builtin.debug:
        msg: "Verifying server setup for {{ inventory_hostname }}..."

  tasks:
    - name: Verify admin user sudo access
      ansible.builtin.command: sudo -n true
      changed_when: false

    - name: Verify swap configuration
      ansible.builtin.shell:
        cmd: set -o pipefail && free -m | grep Swap
        executable: /bin/bash
      register: swap_info
      changed_when: false

    - name: Verify swappiness value
      ansible.builtin.slurp:
        src: /proc/sys/vm/swappiness
      register: swappiness_check

    - name: Check swappiness is optimal
      ansible.builtin.fail:
        msg: "Swappiness is {{ swappiness_check.content | b64decode | trim }}, expected 20"
      when: (swappiness_check.content | b64decode | trim | int) != 20

    - name: Verify timezone configuration
      ansible.builtin.command: timedatectl show --property=Timezone --value
      register: timezone_check
      changed_when: false
      failed_when: timezone_check.stdout == ''

    - name: Verify NTP synchronization
      ansible.builtin.command: timedatectl show --property=NTPSynchronized --value
      register: ntp_check
      changed_when: false
      failed_when: ntp_check.stdout != 'yes'

    - name: Verify UFW firewall status
      ansible.builtin.command: ufw status
      register: ufw_check
      changed_when: false
      become: true
      failed_when: "'Status: active' not in ufw_check.stdout"

    - name: Verify root SSH login disabled
      ansible.builtin.command: ssh -o ConnectTimeout=5 -o BatchMode=yes root@{{ ansible_default_ipv4.address }} exit
      register: root_ssh_check
      failed_when: root_ssh_check.rc == 0
      changed_when: false
      delegate_to: localhost

    - name: Verify /tmp directory writable
      ansible.builtin.file:
        path: /tmp/test_write
        state: touch
        mode: '0644'

    - name: Clean up test file
      ansible.builtin.file:
        path: /tmp/test_write
        state: absent

    - name: Verify Docker installation
      ansible.builtin.command: docker --version
      changed_when: false

    - name: Verify admin user Docker permissions
      ansible.builtin.command: docker info
      changed_when: false

    - name: Verify Caddy installation
      ansible.builtin.command: caddy version
      changed_when: false

    - name: Verify Caddy service status
      ansible.builtin.systemd:
        name: caddy
      register: caddy_service_check
      failed_when: caddy_service_check.status.ActiveState != 'active'

    - name: Verify Caddy configuration directory exists
      ansible.builtin.stat:
        path: "/home/{{ admin_user }}/caddy"
      register: caddy_dir_check
      failed_when: not caddy_dir_check.stat.exists

    - name: Verify Caddy server response
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}"
        validate_certs: false
        timeout: 10
        return_content: true
      register: caddy_response_check
      delegate_to: localhost
      failed_when: "'Hello from ' + inventory_hostname not in caddy_response_check.content"

    - name: Verify HTTPS redirect working
      ansible.builtin.uri:
        url: "https://{{ inventory_hostname }}"
        timeout: 10
      delegate_to: localhost

    - name: Verify base container running
      ansible.builtin.command: docker ps --filter "name=base" --format "table {{ '{{.Names}}' }}\t{{ '{{.Status}}' }}"
      register: base_container_check
      changed_when: false
      failed_when: "'base' not in base_container_check.stdout or 'Up' not in base_container_check.stdout"

    - name: Verify claude-code in base container
      ansible.builtin.command: docker exec base /home/admin/.npm-global/bin/claude --version
      changed_when: false

    - name: Verify Docker access in base container
      ansible.builtin.command: docker exec base docker ps
      changed_when: false

    - name: Verify Docker Compose in base container
      ansible.builtin.command: docker exec base docker-compose --version
      changed_when: false

    - name: Verify Docker Buildx in base container
      ansible.builtin.command: docker exec base docker buildx version
      changed_when: false

    - name: Verify Zellij installation in base container
      ansible.builtin.command: docker exec base zellij --version
      changed_when: false

    - name: Verify Caddy auto-reload path unit is active
      ansible.builtin.systemd:
        name: caddy-reload.path
      register: caddy_reload_path_check
      failed_when: caddy_reload_path_check.status.ActiveState != 'active'

    - name: Verify Caddy auto-reload service unit exists
      ansible.builtin.stat:
        path: /etc/systemd/system/caddy-reload.service
      register: caddy_reload_service_check
      failed_when: not caddy_reload_service_check.stat.exists

    - name: Verify Postfix installation
      ansible.builtin.command: postconf mail_version
      changed_when: false

    - name: Verify Postfix service status
      ansible.builtin.systemd:
        name: postfix
      register: postfix_service_check
      failed_when: postfix_service_check.status.ActiveState != 'active'

    - name: Verify SMTP port is listening
      ansible.builtin.wait_for:
        port: 25
        host: 127.0.0.1
        timeout: 5

    - name: Test SMTP connectivity
      ansible.builtin.shell: |
        set -o pipefail
        timeout 5 bash -c "echo 'quit' | telnet localhost 25" || true
      register: smtp_connectivity_test
      changed_when: false
      failed_when: "'220' not in smtp_connectivity_test.stdout"

    - name: Verify Postfix queue directory exists
      ansible.builtin.stat:
        path: /var/spool/postfix
      register: postfix_queue_check
      failed_when: not postfix_queue_check.stat.exists
